{"version":3,"sources":["Components/Filter.js","Components/NewPeopleForm.js","Components/Name.js","Components/AllNames.js","services/persons.js","App.js","index.js"],"names":["Filter","props","console","log","value","onChange","NewPeopleForm","onSubmit","onSubmitName","valueName","onChangeName","valueNumber","onChangeNumber","type","Name","name","deleteName","number","onClick","AllNames","namesToShow","map","id","baseUrl","axios","get","then","response","data","newObject","post","delete","App","useState","persons","setPersons","newPerson","setnewPerson","newNumber","setnewNumber","filterPerson","setnewFilter","notificationMessage","setNotificationMessage","useEffect","personsService","initialPersons","find","person","filter","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","event","target","preventDefault","length","window","alert","nameObject","returnedPerson","concat","setTimeout","personToDelete","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab5dff13.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n    console.log(props)\n    return (\n        <div>\n        filter shown with: <input value={props.value}\n        onChange={props.onChange}/>\n        </div>\n    )\n  }\n\n  export default Filter","import React from 'react'\n\nconst NewPeopleForm = (props) => {\nreturn (\n    <div>\n        <h2>Add A New:</h2>\n        <form onSubmit={props.onSubmitName}>\n            <div>\n            name: <input value={props.valueName}\n            onChange={props.onChangeName}/>\n            </div>\n            <div>\n            number: <input value={props.valueNumber}\n            onChange={props.onChangeNumber}/>\n            </div>\n            <div>\n            <button type='submit'>add</button>\n            </div>\n        </form>\n    </div>\n)}\n\nexport default NewPeopleForm","import React from 'react'\n\nconst Name = ({name, deleteName}) => {\n    // console.log({name})\n    return (\n      <li>\n        {name.name} {name.number}\n        <button onClick={deleteName}>Delete</button>\n      </li>\n    )\n  }\n\n  export default Name","import React from 'react'\nimport Name from './Name'\n\nconst AllNames = (props) => {\n  // console.log(props.deleteName)\n    return (\n        <div>\n        <h2>Numbers:</h2>\n        <ul>\n          {props.namesToShow.map(name =>\n            <Name key={name.id} name={name} \n            deleteName={()=>props.deleteName(name.id)}/>\n          )}\n        </ul>\n        </div>\n    )\n  }\n\n  export default AllNames","import axios from 'axios'\n//const baseUrl = 'http://localhost:3001/persons'\n// const baseUrl = 'http://localhost:3001/api/persons'\n//const baseUrl = 'https://cryptic-forest-74372.herokuapp.com/api/persons'\nconst baseUrl = 'api/persons'\n\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteItem = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => console.log(response))\n}\n\n\nexport default {getAll, create, deleteItem}","import React, { useState, useEffect } from 'react'\nimport Filter from './Components/Filter'\nimport NewPeopleForm from './Components/NewPeopleForm'\nimport AllNames from './Components/AllNames'\nimport axios from 'axios'\nimport personsService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  // const [ persons, setPersons ] = useState([{id: 1, name: 'Arto Hellas'},\n  // {id: 2, name: 'Zeus Helios'},\n  // {id: 3, name: 'Marta Zuckerberg'},\n  // {id: 4, name: 'Denis Saltberg'}])\n\n  const [ newPerson, setnewPerson ] = useState('')\n  const [ newNumber, setnewNumber ] = useState('')\n  const [ filterPerson, setnewFilter ] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  \n  useEffect(() => {\n    personsService\n    .getAll()\n    .then(initialPersons => {\n      setPersons(initialPersons)\n    })\n    // Prev version with axios\n    // axios\n    //   .get('http://localhost:3001/persons')\n    //   .then(response => {\n    //     setPersons(response.data)\n    //   })\n  }, [])\n\n  const namesToShow = persons.find((person) => person.name === filterPerson)\n    ? persons.filter((person) => person.name === filterPerson)\n    : persons\n\n  const Notification = ({message}) => {\n    const notificationStyle = {\n      color: 'green',\n      background: 'lightgrey',\n      fontSize: '20px',\n      borderStyle: 'solid',\n      borderRadius: '5px',\n      padding: '10px',\n      marginBottom: '10px'\n    }\n    if (message === null) {\n      return null\n    }\n    return (\n      <div style={notificationStyle}>\n        {message}\n      </div>\n    )\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n\n    // Don't add if input is empty\n    if (newPerson.length === 0) {\n      window.alert('Please add a name before clicking add')\n    }\n    else {\n    const nameObject = {\n      name: newPerson,\n      number: newNumber,\n      // id: persons.length + 1\n    }\n    const nameExists = persons.filter((person) => person.name === newPerson)\n\n    nameExists.length > 0\n      ? window.alert(`${newPerson} is already added to Phonebook`)\n      : personsService\n        .create(nameObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setnewPerson('')\n          setnewNumber('')\n          setNotificationMessage(`'${returnedPerson.name}' was added to Phonebook`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000);\n        })\n      \n      // Prev version with axios:\n      // axios\n      // .post('http://localhost:3001/persons', nameObject)\n      // .then(response => {\n      //   setPersons(persons.concat(response.data))\n      //   setnewPerson('')\n      //   setnewNumber('')\n      // })\n      // Prev version without axios:\n      // : setPersons(persons.concat(nameObject))\n      //   setnewPerson('')\n      //   setnewNumber('')\n    }\n  }\n\n  const deleteName = (id) => {\n    // console.log(id)\n    const personToDelete = persons.find(person => person.id === id)\n    window.confirm(`Delete ${personToDelete.name} ?`)\n    ? personsService\n        .deleteItem(id)\n        .then(\n          console.log(`deleted person ${id}`),\n          setPersons(persons.filter((person) => person.id !== id))\n        )\n    // axios\n    //     .delete(`http://localhost:3001/persons/${id}`)\n    //     .then(response => {\n    //       console.log(`deleted person ${id}`)\n    //       setPersons(persons.filter((person) => person.id !== id))\n    //     })\n    : console.log(`person ${id} was not deleted`)\n\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setnewPerson(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setnewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setnewFilter(event.target.value)\n  }\n  \n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={notificationMessage}/>\n      <Filter value={filterPerson} onChange={handleFilterChange} />\n      \n      <NewPeopleForm onSubmitName={addName} \n      valueName={newPerson} onChangeName={handleNameChange}\n      valueNumber={newNumber} onChangeNumber={handleNumberChange} />\n\n        {/* Debug:\n        {console.log(namesToShow)}\n        {console.log(filterPerson)} */}\n\n      <AllNames namesToShow={namesToShow} deleteName={deleteName}/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}