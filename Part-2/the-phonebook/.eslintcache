[{"/Users/rekacsima/Desktop/fullstackopen/fullstackopen-course-submissions/Part-2/the-phonebook/src/index.js":"1","/Users/rekacsima/Desktop/fullstackopen/fullstackopen-course-submissions/Part-2/the-phonebook/src/App.js":"2","/Users/rekacsima/Desktop/fullstackopen/fullstackopen-course-submissions/Part-2/the-phonebook/src/reportWebVitals.js":"3","/Users/rekacsima/Desktop/fullstackopen/fullstackopen-course-submissions/Part-2/the-phonebook/src/Components/Name.js":"4","/Users/rekacsima/Desktop/fullstackopen/fullstackopen-course-submissions/Part-2/the-phonebook/src/Components/NewPeopleForm.js":"5","/Users/rekacsima/Desktop/fullstackopen/fullstackopen-course-submissions/Part-2/the-phonebook/src/Components/Filter.js":"6","/Users/rekacsima/Desktop/fullstackopen/fullstackopen-course-submissions/Part-2/the-phonebook/src/Components/AllNames.js":"7","/Users/rekacsima/Desktop/fullstackopen/fullstackopen-course-submissions/Part-2/the-phonebook/src/services/persons.js":"8"},{"size":367,"mtime":1614027012914,"results":"9","hashOfConfig":"10"},{"size":4460,"mtime":1614349838197,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611563300752,"results":"12","hashOfConfig":"10"},{"size":248,"mtime":1614262506398,"results":"13","hashOfConfig":"10"},{"size":563,"mtime":1611828658667,"results":"14","hashOfConfig":"10"},{"size":244,"mtime":1611826270406,"results":"15","hashOfConfig":"10"},{"size":405,"mtime":1614263272806,"results":"16","hashOfConfig":"10"},{"size":677,"mtime":1617641260796,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"k97iom",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"/Users/rekacsima/Desktop/fullstackopen/fullstackopen-course-submissions/Part-2/the-phonebook/src/index.js",[],["39","40"],"/Users/rekacsima/Desktop/fullstackopen/fullstackopen-course-submissions/Part-2/the-phonebook/src/App.js",["41"],"import React, { useState, useEffect } from 'react'\nimport Filter from './Components/Filter'\nimport NewPeopleForm from './Components/NewPeopleForm'\nimport AllNames from './Components/AllNames'\nimport axios from 'axios'\nimport personsService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  // const [ persons, setPersons ] = useState([{id: 1, name: 'Arto Hellas'},\n  // {id: 2, name: 'Zeus Helios'},\n  // {id: 3, name: 'Marta Zuckerberg'},\n  // {id: 4, name: 'Denis Saltberg'}])\n\n  const [ newPerson, setnewPerson ] = useState('')\n  const [ newNumber, setnewNumber ] = useState('')\n  const [ filterPerson, setnewFilter ] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  \n  useEffect(() => {\n    personsService\n    .getAll()\n    .then(initialPersons => {\n      setPersons(initialPersons)\n    })\n    // Prev version with axios\n    // axios\n    //   .get('http://localhost:3001/persons')\n    //   .then(response => {\n    //     setPersons(response.data)\n    //   })\n  }, [])\n\n  const namesToShow = persons.find((person) => person.name === filterPerson)\n    ? persons.filter((person) => person.name === filterPerson)\n    : persons\n\n  const Notification = ({message}) => {\n    const notificationStyle = {\n      color: 'green',\n      background: 'lightgrey',\n      fontSize: '20px',\n      borderStyle: 'solid',\n      borderRadius: '5px',\n      padding: '10px',\n      marginBottom: '10px'\n    }\n    if (message === null) {\n      return null\n    }\n    return (\n      <div style={notificationStyle}>\n        {message}\n      </div>\n    )\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n\n    // Don't add if input is empty\n    if (newPerson.length === 0) {\n      window.alert('Please add a name before clicking add')\n    }\n    else {\n    const nameObject = {\n      name: newPerson,\n      number: newNumber,\n      // id: persons.length + 1\n    }\n    const nameExists = persons.filter((person) => person.name === newPerson)\n\n    nameExists.length > 0\n      ? window.alert(`${newPerson} is already added to Phonebook`)\n      : personsService\n        .create(nameObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setnewPerson('')\n          setnewNumber('')\n          setNotificationMessage(`'${returnedPerson.name}' was added to Phonebook`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000);\n        })\n      \n      // Prev version with axios:\n      // axios\n      // .post('http://localhost:3001/persons', nameObject)\n      // .then(response => {\n      //   setPersons(persons.concat(response.data))\n      //   setnewPerson('')\n      //   setnewNumber('')\n      // })\n      // Prev version without axios:\n      // : setPersons(persons.concat(nameObject))\n      //   setnewPerson('')\n      //   setnewNumber('')\n    }\n  }\n\n  const deleteName = (id) => {\n    // console.log(id)\n    const personToDelete = persons.find(person => person.id === id)\n    window.confirm(`Delete ${personToDelete.name} ?`)\n    ? personsService\n        .deleteItem(id)\n        .then(\n          console.log(`deleted person ${id}`),\n          setPersons(persons.filter((person) => person.id !== id))\n        )\n    // axios\n    //     .delete(`http://localhost:3001/persons/${id}`)\n    //     .then(response => {\n    //       console.log(`deleted person ${id}`)\n    //       setPersons(persons.filter((person) => person.id !== id))\n    //     })\n    : console.log(`person ${id} was not deleted`)\n\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setnewPerson(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setnewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setnewFilter(event.target.value)\n  }\n  \n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={notificationMessage}/>\n      <Filter value={filterPerson} onChange={handleFilterChange} />\n      \n      <NewPeopleForm onSubmitName={addName} \n      valueName={newPerson} onChangeName={handleNameChange}\n      valueNumber={newNumber} onChangeNumber={handleNumberChange} />\n\n        {/* Debug:\n        {console.log(namesToShow)}\n        {console.log(filterPerson)} */}\n\n      <AllNames namesToShow={namesToShow} deleteName={deleteName}/>\n    </div>\n  )\n}\n\nexport default App;\n","/Users/rekacsima/Desktop/fullstackopen/fullstackopen-course-submissions/Part-2/the-phonebook/src/reportWebVitals.js",[],["42","43"],"/Users/rekacsima/Desktop/fullstackopen/fullstackopen-course-submissions/Part-2/the-phonebook/src/Components/Name.js",[],["44","45"],"/Users/rekacsima/Desktop/fullstackopen/fullstackopen-course-submissions/Part-2/the-phonebook/src/Components/NewPeopleForm.js",[],"/Users/rekacsima/Desktop/fullstackopen/fullstackopen-course-submissions/Part-2/the-phonebook/src/Components/Filter.js",[],"/Users/rekacsima/Desktop/fullstackopen/fullstackopen-course-submissions/Part-2/the-phonebook/src/Components/AllNames.js",[],"/Users/rekacsima/Desktop/fullstackopen/fullstackopen-course-submissions/Part-2/the-phonebook/src/services/persons.js",["46"],"import axios from 'axios'\n//const baseUrl = 'http://localhost:3001/persons'\n// const baseUrl = 'http://localhost:3001/api/persons'\n//const baseUrl = 'https://cryptic-forest-74372.herokuapp.com/api/persons'\nconst baseUrl = 'api/persons'\n\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteItem = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => console.log(response))\n}\n\n\nexport default {getAll, create, deleteItem}",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":5,"column":8,"nodeType":"53","messageId":"54","endLine":5,"endColumn":13},{"ruleId":"47","replacedBy":"55"},{"ruleId":"49","replacedBy":"56"},{"ruleId":"47","replacedBy":"57"},{"ruleId":"49","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":24,"column":1,"nodeType":"61","endLine":24,"endColumn":44},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar",["62"],["63"],["62"],["63"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]